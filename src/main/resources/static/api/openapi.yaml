openapi: 3.0.0
info:
  title: API Recursos Humanos
  description: API para gestionar usuarios
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/
    title: Usuarios
paths:
  /allUser:
    get:
      summary: Obtiene todos los usuarios
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /user:
    post:
      summary: Crea un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Creado
          headers:
            Location:
              schema:
                type: string
      '400':
        description: Solicitud incorrecta
  /user/employed:
    post:
      summary: Crea un nuevo usuario empleado
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Creado
          headers:
            Location:
              schema:
                type: string
      '400':
        description: Solicitud incorrecta
  /user/{id}:
    get:
      summary: Obtiene un usuario por ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID del usuario a buscar
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: No encontrado
    put:
      summary: Actualiza un usuario existente por ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID del usuario a actualizar
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
        '404':
          description: No encontrado
    delete:
      summary: Elimina un usuario existente por ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID del usuario a eliminar
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '400':
          description: Solicitud incorrecta

components:
  schemas:
    User:
      type: object
      properties:
        id_us:
          type: integer
          format: int64
        name:
          type: string
        lastname:
          type: string
        email:
          type: string
        psw:
          type: string
        phone:
          type: string
        status:
          type: integer
        area:
          $ref: '#/components/schemas/Area'
    Area:
      type: object
      properties:
        id_ar:
          type: integer
          format: int64
        name:
          type: string
        des:
          type: string
